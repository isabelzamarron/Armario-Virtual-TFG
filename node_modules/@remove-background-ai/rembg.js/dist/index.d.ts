/// <reference types="node" />
import { AxiosProgressEvent } from 'axios';
type InputType = string | Buffer | {
    base64: string;
};
/**
 * Removes the background from an image using the rembg.com API.
 *
 * @param apiKey - The API key for rembg.com.
 * @param inputImage - file path, Buffer, or an object with a base64 property.
 * @param onUploadProgress - A callback function to handle upload progress events. Defaults to console.log.
 * @param onDownloadProgress - A callback function to handle download progress events. Defaults to console.log.
 * @param returnMask - Whether to return a mask instead of the image. Defaults to false.
 * @param returnBase64 - Whether to return the output image as a Base64 string. Defaults to false.
 * @returns If returnBase64 is true, returns an object with the base64Image property containing the Base64 string of the output image.
 *          If returnBase64 is false, returns an object with the outputImagePath property containing the path to the output image file,
 *          and the cleanup function to delete the temporary file.
 * @throws Throws an error if the API key is not provided or if the request fails.
 */
export declare const rembg: ({ apiKey, inputImage, onUploadProgress, onDownloadProgress, returnMask, returnBase64, }: {
    apiKey: string;
    inputImage: InputType;
    onUploadProgress: (progressEvent: AxiosProgressEvent) => void;
    onDownloadProgress: (progressEvent: AxiosProgressEvent) => void;
    returnMask?: boolean | undefined;
    returnBase64: boolean;
}) => Promise<{
    base64Image: string;
    outputImagePath?: undefined;
    cleanup?: undefined;
} | {
    outputImagePath: string;
    cleanup: () => Promise<void>;
    base64Image?: undefined;
}>;
export default rembg;
